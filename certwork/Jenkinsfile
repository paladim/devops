pipeline {
    parameters {
        password (name: 'AWS_ACCESS_KEY_ID')
        password (name: 'AWS_SECRET_ACCESS_KEY')
    }

    agent any
    stages {
        stage("Deploy") {
            steps {
                echo "Deploy"
                sh "[ ! -d /opt/app1 ] && git clone https://github.com/paladim/devops /opt/app1 || true"
                sh "git -C /opt/app1 pull"
                sh "[ ! -d /opt/app1/certwork/keys ] && mkdir -p /opt/app1/certwork/keys || true"
                sh "[ ! -f /opt/app1/certwork/keys/ssh_key ] && ssh-keygen -t rsa -N '' -f /opt/app1/certwork/keys/ssh_key || true"
                sh "terraform -chdir=/opt/app1/certwork/terraform init -var='AWS_ACCESS_KEY_ID=${params.AWS_ACCESS_KEY_ID}' -var='AWS_SECRET_ACCESS_KEY=${params.AWS_SECRET_ACCESS_KEY}'"
                sh "terraform -chdir=/opt/app1/certwork/terraform plan -var='AWS_ACCESS_KEY_ID=${params.AWS_ACCESS_KEY_ID}' -var='AWS_SECRET_ACCESS_KEY=${params.AWS_SECRET_ACCESS_KEY}'"
                sh "terraform -chdir=/opt/app1/certwork/terraform apply -auto-approve -var='AWS_ACCESS_KEY_ID=${params.AWS_ACCESS_KEY_ID}' -var='AWS_SECRET_ACCESS_KEY=${params.AWS_SECRET_ACCESS_KEY}'"
                sh "ansible-playbook playbook.yml --extra-vars 'aws_access_key_id=${params.AWS_ACCESS_KEY_ID} aws_secret_access_key=${params.AWS_SECRET_ACCESS_KEY}'"
            }
        }
    }
}
